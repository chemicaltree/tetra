<?xml version="1.0" encoding="UTF-8"?>
<doc id="W08-1502" editor="C" format="WS" position="S" region="NS">
    <title>
        <text>Speech Translation with Grammatical Framework</text>
    </title>
    <abstract>
        <text>Grammatical Framework (GF) is a grammar formalism which supports interlingua-based translation, library-based grammar engineering, and compilation to speech recognition grammars. We show how these features can be used in the construction of portable high-precision domain-specific speech translators.</text>
    </abstract>   
    <introduction>
        <text>Speech translators for safety-critical applications such as medicine</text>
        <edit type="style" crr="require the ability" comments="">need</edit>
        <text>to offer high-precision translation. One way to achieve high precision is to limit the coverage of the translator to a specific domain. The development of such high-precision, domain-specific translators can be both resource intensive, and require rare combinations of developer skills. For example,</text>
        <edit type="conciseness" crr="the development of a" comments="Syntax/'consider' is almost a double positive of 'for example'">consider developing a</edit>
        <text>Russian-Swahili speech translator for the orthopedic domain using direct translation between the two languages</text>
        <edit type="readability;conciseness" crr="we could" comments="Syntax/changing sentence structure combines both sentences and shortens the sentence into one">. Developing such a system could</edit>
        <text>require an orthopedist programmer and linguist who speaks both Russian and Swahili.</text>
        <edit type="readability" crr="In reality, such" comments="Flow/this is optional, but the insertion provides a bit more meaning and context. The sentence is also less abrupt">Such</edit>
        <text>people may be hard to find. Furthermore, developing translators for all pairs of N languages requires O(N2) systems</text>
        <edit type="readability;word choice" crr="that are" comments="Syntax/use of the comma here is correct, but alternative is better in this instance">,</edit>
        <text>developed by an equal number of bilingual domain experts.</text>
        <text>\\ The language pair explosion and the need for the same person to possess knowledge about the source and target languages can be avoided by using an interlingua-based approach. The requirement that developers be both domain experts and linguists can be addressed by the use of grammar libraries which implement the domain-independent linguistic details of each language.</text>
        <text>\\ Grammatical Framework (GF) (Ranta, 2004) is a type-theoretic grammar formalism which is well suited to high-precision, domain-specific interlingua-based translation (Khegai, 2006), and library-based grammar engineering (Ranta, 2008). GF divides grammars into abstract syntax and concrete syntax. The abstract syntax defines what can be said in the grammar, and the concrete syntax defines how it is said in a particular language. If one abstract syntax</text>
        <edit type="redundancy" crr="" comments="Duplication">syntax</edit>
        <text>is</text>
        <edit type="style" crr="assigned" comments="Meaning/register - there's potential here for confusion ('if one abstract syntax is given, then....'), so avoid using alternative, which is a better word for academic writing anyway">given</edit>
        <text>multiple concrete syntaxes,</text>
        <edit type="clarity" crr="then" comments="Syntax/this is optional, but as you're describing a sequence of events, then it flows better"></edit>
        <text>the abstract syntax can be used as an interlingua. Given an abstract and a concrete syntax, GF allows both parsing (text to abstract syntax) and linearization (abstract syntax to text). This means that interlingua-based translation is just a matter of parsing in one language and linearizing to another.</text>
        <text>\\ he GF resource grammar library (Ranta, 2008) implements the domain-independent morphological and syntactic details of eleven languages. A grammar writer can use functions from a resource grammar when defining the concrete syntax of an application grammar. This is made possible by GF's support for grammar composition, and frees the grammar writer from having to implement linguistic details such as agreement</text>
        <edit type="punctuation" crr="or word order." comments="">, word order etc.</edit>
        <text>\\ In addition to parsing and linearization, the declarative nature of GF grammars allows them to be compiled to other grammar formats. The GF speech recognition grammar compiler (Bringert, 2007) can produce context-free grammars or finite-state models which can then be used to guide speech recognizers.</text>
        <text>\\ These components, interlingua-based translation, grammar libraries, and speech recognition grammar compilation, can be used to develop domain-specific speech translators based on GF grammars. Figure 1 shows an overview of a minimal unidirectional speech translator which uses these components. This is a proof-of-concept system that demonstrates how GF components can be used for speech translation, and as such it can hardly be compared to a more complete and mature system such as MedSLT (Bouillon et al., 2005). However, the system has some promising features compared to systems based on unification grammars: the expressive power of GFâ€™s concrete syntax allows us to use an application-specific interlingua without any transfer rules, and the wide language support of the GF Resource Grammar library makes it possible to quickly port applications to new languages.</text>
        <text>\\ In Section 2</text>
        <edit type="punctuation" crr="," comments="Punctuation/optional use of the comma here - better when you're introducing something"></edit>
        <text>we show a small example grammar for a medical speech translator. Section 3 briefly discusses how a speech translator can be implemented. Section 5 describes some possible extensions to the proof-of-concept system</text>
        <edit type="punctuation" crr="" comments="Punctuation/see earlier comment - this is a simple conjunction">,</edit>
        <text>and Section 6 offers some conclusions.</text>
    </introduction>   
</doc>